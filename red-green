<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>3D Red Light Green Light Game</title>
  <style>
    body { margin: 0; overflow: hidden; }
    #overlay {
      position: absolute;
      top: 10px;
      left: 10px;
      font-size: 24px;
      color: white;
      background: rgba(0,0,0,0.5);
      padding: 10px;
      z-index: 1;
    }
  </style>
</head>
<body>
<div id="overlay">🟢 Green Light</div>
<script src="https://cdn.jsdelivr.net/npm/three@0.155.0/build/three.min.js"></script>
<script>
  let scene = new THREE.Scene();
  let camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
  let renderer = new THREE.WebGLRenderer();
  renderer.setSize(window.innerWidth, window.innerHeight);
  document.body.appendChild(renderer.domElement);

  const overlay = document.getElementById("overlay");

  // Lights
  const light = new THREE.AmbientLight(0xffffff); scene.add(light);

  // Ground
  const ground = new THREE.Mesh(
    new THREE.PlaneGeometry(100, 20),
    new THREE.MeshBasicMaterial({color: 0x228B22})
  );
  ground.rotation.x = -Math.PI / 2;
  scene.add(ground);

  // Players
  const player1 = new THREE.Mesh(
    new THREE.BoxGeometry(1, 2, 1),
    new THREE.MeshBasicMaterial({color: 0x0000ff})
  );
  player1.position.set(-2, 1, 0);
  scene.add(player1);

  const player2 = new THREE.Mesh(
    new THREE.BoxGeometry(1, 2, 1),
    new THREE.MeshBasicMaterial({color: 0xff0000})
  );
  player2.position.set(2, 1, 0);
  scene.add(player2);

  // Camera
  camera.position.z = 15;
  camera.position.y = 8;
  camera.lookAt(0, 0, 0);

  // Game state
  let currentLight = 'green';
  let gameOver = false;

  const audio = new Audio("https://cdn.pixabay.com/download/audio/2022/03/17/audio_33b08f3479.mp3?filename=korean-children-song-10829.mp3");

  function toggleLight() {
    if (gameOver) return;
    currentLight = (currentLight === 'green') ? 'red' : 'green';
    overlay.innerText = currentLight === 'green' ? "🟢 Green Light" : "🔴 Red Light";
    overlay.style.color = currentLight === 'green' ? 'lime' : 'red';

    if (currentLight === 'red') {
      audio.pause();
    } else {
      audio.currentTime = 0;
      audio.play();
    }

    setTimeout(toggleLight, Math.random() * 2000 + 1500);
  }

  let p1Moving = false, p2Moving = false;

  document.addEventListener('keydown', (e) => {
    if (gameOver) return;
    if (e.key === 'a') p1Moving = true;
    if (e.key === 'l') p2Moving = true;
  });

  document.addEventListener('keyup', (e) => {
    if (e.key === 'a') p1Moving = false;
    if (e.key === 'l') p2Moving = false;
  });

  function animate() {
    requestAnimationFrame(animate);

    if (!gameOver) {
      if (p1Moving) {
        if (currentLight === 'red') {
          overlay.innerText = "❌ Player 1 Moved on RED! Game Over!";
          gameOver = true;
        } else {
          player1.position.x += 0.05;
        }
      }

      if (p2Moving) {
        if (currentLight === 'red') {
          overlay.innerText = "❌ Player 2 Moved on RED! Game Over!";
          gameOver = true;
        } else {
          player2.position.x += 0.05;
        }
      }

      if (player1.position.x >= 45) {
        overlay.innerText = "🎉 Player 1 Wins!";
        gameOver = true;
      }
      if (player2.position.x >= 45) {
        overlay.innerText = "🎉 Player 2 Wins!";
        gameOver = true;
      }
    }

    renderer.render(scene, camera);
  }

  toggleLight();
  animate();
</script>
</body>
</html>
